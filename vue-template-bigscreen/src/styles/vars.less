@primary: #1890ff;
@primary-color: #2064ef; // 全局主色
@link-color: #1890ff; // 链接色
@info-color: #bdbdbd; // 提示色
@success-color: #52c41a; // 成功色
@warning-color: #faad14; // 警告色
@error-color: #f5222d; // 错误色
@font-size-base: 14px; // 主字号
@heading-color: rgba(0, 0, 0, 0.85); // 标题色
@text-color: rgba(0, 0, 0, 0.65); // 主文本色
@text-color-secondary: rgba(0, 0, 0, 0.45); // 次文本色
@disabled-color: rgba(0, 0, 0, 0.25); // 失效色
@border-radius-base: 0px; // 组件/浮层圆角
@border-color-base: #d9d9d9; // 边框色
@box-shadow-base: 0 2px 8px rgba(0, 0, 0, 0.15); //
@min-width: 1200px; // 内容区域宽度
@banner-title: 40px; // banner 标题文字大小
@banner-button: 24px; // banner 按钮文字大小
@banner-text: 16px; // banner 内容文字大小
@m-top-1: 120px;
@m-top-2: 80px;
@m-top-3: 40px;

// 后台框架
@appbar-height: 50px;
@sideBarWidth: 260px;

.sg-font-small {
    font-size: 12px;
}
.sg-error-color {
    color: @error-color;
}
.sg-primary-color {
    color: @primary-color;
}
.sg-link-color {
    color: @link-color;
}
.sg-success-color {
    color: @success-color;
}
.sg-info-color {
    color: @info-color;
}
.sg-warning-color {
    color: @warning-color;
}

.flexbox(@arg...) {
    display: -webkit-box;
    display: -webkit-flex;
    display: flex;
    text-align: left;

    .mixin(wrap) {
        -webkit-box-lines: multiple;
        -webkit-flex-wrap: wrap;
        flex-wrap: wrap;
    }

    .mixin(v) {
        -webkit-box-orient: vertical;
        -webkit-flex-direction: column;
        flex-direction: column;
    }

    .mixin(align-center) {
        -webkit-box-align: center;
        -webkit-align-items: center;
        align-items: center;
    }

    .mixin(justify-between) {
        -webkit-box-pack: space-between;
        -webkit-justify-content: space-between;
        justify-content: space-between;
    }

    .mixin(justify-center) {
        -webkit-box-pack: center;
        -webkit-justify-content: center;
        justify-content: center;
    }

    //arguments在循环里变成了长度了
    //解决办法：不要直接使用arguments，而是定义变量，并且是不限定长度的变量
    .loop(@i) when (@i > 0) {
        .loop((@i - 1));
        .mixin(extract(@arg, @i));
    }

    .loop(length(@arguments));
}

html,
body,
#app {
    height: 100%;
}
a,
a:focus,
a:hover {
    color: inherit;
    text-decoration: none;
    cursor: pointer;
}

.loopStyle(@counter) when (@counter > 0) {
    .sg-p-@{counter} {
        padding: (1px * @counter);
    }
    .sg-p-t-@{counter} {
        padding-top: (1px * @counter);
    }
    .sg-p-r-@{counter} {
        padding-right: (1px * @counter);
    }
    .sg-p-b-@{counter} {
        padding-bottom: (1px * @counter);
    }
    .sg-p-l-@{counter} {
        padding-left: (1px * @counter);
    }
    .sg-m-@{counter} {
        margin: (1px * @counter);
    }
    .sg-m-t-@{counter} {
        margin-top: (1px * @counter);
    }
    .sg-m-r-@{counter} {
        margin-right: (1px * @counter);
    }
    .sg-m-b-@{counter} {
        margin-bottom: (1px * @counter);
    }
    .sg-m-l-@{counter} {
        margin-left: (1px * @counter);
    }
    .sg-fz-@{counter} {
        font-size: (1px * @counter);
    }
    .sg-width@{counter} {
        width: 1% * @counter;
    }
    .loopStyle((@counter - 1)); // 递归调用自身
}
.loopStyle(30);

.sg-center {
    text-align: center;
}
